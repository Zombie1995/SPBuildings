from random import randint
import telebot
from image_parsing import YandexImage
# Our modules
from webhook import Webhook
from location import Geolocator
from voice_recognition import VoiceRecognizer

WEBHOOK_URL = 'https://0d1e-188-243-183-20.ngrok.io'
API_TOKEN = '5302345860:AAGahsIU7Q6lAYz4tD5ZVVFMpqugRKTHXIE'

bot = telebot.TeleBot(API_TOKEN)
image_parser = YandexImage()
# Our classes
webhook = Webhook(bot, WEBHOOK_URL)
geolocator = Geolocator()
voice_recognizer = VoiceRecognizer()

# Nearest buildings
nearest = []


@bot.message_handler(commands=["start"])
def start_msg(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = telebot.types.KeyboardButton(
        '–ù–∞–π—Ç–∏ –∑–¥–∞–Ω–∏—è –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏ üåé', request_location=True)
    btn2 = telebot.types.KeyboardButton('–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ü§ñ')
    btn3 = telebot.types.KeyboardButton('–û –±–æ—Ç–µ üíÄ')
    markup.add(btn1)
    markup.add(btn2, btn3)
    text = ''
    text += f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n'
    text += '–Ø –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —ç–∫—Å–∫—É—Ä—Å–æ–≤–æ–¥ SPBuildings!'
    bot.send_message(
        message.chat.id, text,
        reply_markup=markup)


@bot.message_handler(content_types=["location"])
def show_nearest(message):
    global nearest
    nearest = geolocator.get_nearest(message)
    if len(nearest) == 0:
        bot.send_message(
            message.chat.id,
            '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –∑–¥–∞–Ω–∏—è —Ä—è–¥–æ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.')
        return
    building_index = 0
    for building in nearest:
        name = building['name']
        address = building['address']
        text = 'üè† ' + name
        btn = telebot.types.InlineKeyboardButton(
            text, callback_data=str(building_index))
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(btn)
        search_result_range = 5
        search_text = name + ' ' + address
        if building['img_url'] != '0':
            search_result_range = 0
            search_text = building['img_url']
        img_url = image_parser.search(search_text)[randint(0, search_result_range)].preview.url
        message_id = bot.send_photo(
            message.chat.id, img_url,
            reply_markup=markup).message_id
        building['message_id'] = message_id
        building_index += 1


@bot.callback_query_handler(func=lambda call: True)
def building_history(call):
    chat_id = call.message.chat.id
    building_index = int(call.data)
    bot.edit_message_reply_markup(
        chat_id,
        message_id=nearest[building_index]['message_id'],
        reply_markup=None)
    for i in range(len(nearest)):
        if i != building_index:
            message_id = nearest[i]['message_id']
            bot.delete_message(chat_id, message_id)
    text = ''
    text += nearest[building_index]['name'] + '\n'
    text += '(' + nearest[building_index]['address'] + ')' + '\n'
    text += nearest[building_index]['history']
    bot.send_message(chat_id, text)


@bot.message_handler(content_types=["voice"])
def recognize_voice(message):
    file_info = bot.get_file(message.voice.file_id)
    voice_file = bot.download_file(file_info.file_path)
    text = voice_recognizer.get_text(voice_file).capitalize()
    if '–†–∞—Å—Å–∫–∞–∂–∏' in text:
        reply_text = ''
        reply_text += '–ö–æ–º–∞–Ω–¥–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞, –Ω–æ, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, '
        reply_text += '—Ç–∞–∫–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –ø–æ–∫–∞ –Ω–µ—Ç((('
        bot.send_message(message.from_user.id, reply_text)
    else:
        bot.send_message(message.from_user.id,
                         '–ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞')


@bot.message_handler(content_types=['text'])
def func(message):
    if (message.text == '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ü§ñ'):
        bot.send_message(message.chat.id, text='@theorly')
    elif (message.text == '–û –±–æ—Ç–µ üíÄ'):
        text = ''
        text += '–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è –Ω–∞ –º–µ—Å—Ç–Ω–æ—Å—Ç–∏, '
        text += '–∞ —Ç–∞–∫–∂–µ –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –º–µ—Å—Ç–∞ –≤–æ–∫—Ä—É–≥!\n'
        text += '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ–ª–æ—Å–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É "–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –æ...", '
        text += '—á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –≤–∞–º –∑–¥–∞–Ω–∏—è.'
        bot.send_message(message.chat.id, text)
    else:
        bot.send_message(message.chat.id, text='–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å..')


if __name__ == '__main__':
    webhook.run()
